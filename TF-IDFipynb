{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyN1fUPIvM6gibTLCb9rhbWp"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-RRYilKddvez","executionInfo":{"status":"ok","timestamp":1671049734265,"user_tz":480,"elapsed":32476,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"9189b276-84e6-4d5e-eda5-229540f4233a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import precision_score, recall_score, f1_score, roc_auc_score\n","from google.colab import drive\n","drive.mount('/content/gdrive')"]},{"cell_type":"code","source":["# Load data\n","pd.set_option('display.max_colwidth', None)\n","df_train = pd.read_csv('/content/gdrive/MyDrive/Team Blue NLP/train_cleaned.csv',\n","                       usecols = ['avg_count_caps', 'comment_cleaned_spell_no_stopwords_lemm', 'toxic'])\n","df_test = pd.read_csv('/content/gdrive/MyDrive/Team Blue NLP/test_cleaned.csv',\n","                       usecols = ['avg_count_caps', 'comment_cleaned_spell_no_stopwords_lemm', 'toxic'])\n","\n","df_train.loc[:, 'train_test'] = 'train'\n","df_test.loc[:, 'train_test'] = 'test'\n","\n","df = pd.concat([df_train, df_test])\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"2xMc_ujOe300","executionInfo":{"status":"ok","timestamp":1671049771381,"user_tz":480,"elapsed":12541,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"449c358b-8695-425c-cf88-013ba42d2a94"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   avg_count_caps  \\\n","0        0.054422   \n","1        0.012658   \n","2        0.022857   \n","3        0.020833   \n","4        0.034146   \n","\n","                                                                                                    comment_cleaned_spell_no_stopwords_lemm  \\\n","0                                     list moroccan dutch people people wikipedia page order list exception see wp listpeople wp wtaf cheer   \n","1                                                                                            much well careful someone report ban vandalism   \n","2                                                                 block pair write encyclopaedia plenty place play internet use hasten trek   \n","3   thank thanks link reference desk crux orthodoxa good read pretty much look seem cross slightly ambiguous define reason extra beam thank   \n","4  know _number_ bible scholar disagree yet liberal wikipedia lazy look anything attack bible liberal presupposition anti christian bigotry   \n","\n","   toxic train_test  \n","0      0      train  \n","1      0      train  \n","2      0      train  \n","3      0      train  \n","4      0      train  "],"text/html":["\n","  <div id=\"df-ab72e62f-2521-4a64-870b-4d058cd5d9c2\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>avg_count_caps</th>\n","      <th>comment_cleaned_spell_no_stopwords_lemm</th>\n","      <th>toxic</th>\n","      <th>train_test</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.054422</td>\n","      <td>list moroccan dutch people people wikipedia page order list exception see wp listpeople wp wtaf cheer</td>\n","      <td>0</td>\n","      <td>train</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.012658</td>\n","      <td>much well careful someone report ban vandalism</td>\n","      <td>0</td>\n","      <td>train</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.022857</td>\n","      <td>block pair write encyclopaedia plenty place play internet use hasten trek</td>\n","      <td>0</td>\n","      <td>train</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.020833</td>\n","      <td>thank thanks link reference desk crux orthodoxa good read pretty much look seem cross slightly ambiguous define reason extra beam thank</td>\n","      <td>0</td>\n","      <td>train</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.034146</td>\n","      <td>know _number_ bible scholar disagree yet liberal wikipedia lazy look anything attack bible liberal presupposition anti christian bigotry</td>\n","      <td>0</td>\n","      <td>train</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab72e62f-2521-4a64-870b-4d058cd5d9c2')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ab72e62f-2521-4a64-870b-4d058cd5d9c2 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ab72e62f-2521-4a64-870b-4d058cd5d9c2');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["df.rename(columns = {'comment_cleaned_spell_no_stopwords_lemm':'comment_cleaned'},\n","          inplace = True)\n","df.info()"],"metadata":{"id":"U8k_rW44ns1c","executionInfo":{"status":"ok","timestamp":1671049782505,"user_tz":480,"elapsed":8,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"324395e8-6771-406c-8b25-24109851e6dc"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 159571 entries, 0 to 31914\n","Data columns (total 4 columns):\n"," #   Column           Non-Null Count   Dtype  \n","---  ------           --------------   -----  \n"," 0   avg_count_caps   159571 non-null  float64\n"," 1   comment_cleaned  159548 non-null  object \n"," 2   toxic            159571 non-null  int64  \n"," 3   train_test       159571 non-null  object \n","dtypes: float64(1), int64(1), object(2)\n","memory usage: 6.1+ MB\n"]}]},{"cell_type":"code","source":["# Drop rows with missing values\n","df = df.dropna().reset_index(drop = True)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Qj3EDmngEBMS","executionInfo":{"status":"ok","timestamp":1671049786059,"user_tz":480,"elapsed":13,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"2bc5410a-5218-4f14-dccb-cb020086f8e5"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(159548, 4)"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Roughly a 90/10 split between non-toxic and toxic comments for train and test sets\n","df.groupby('train_test')['toxic'].value_counts(normalize = True).round(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L1SnJ1YzEFXU","executionInfo":{"status":"ok","timestamp":1671049787901,"user_tz":480,"elapsed":15,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"2b54b842-7ab5-454b-e806-669b83a5d1b5"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["train_test  toxic\n","test        0        0.904\n","            1        0.096\n","train       0        0.904\n","            1        0.096\n","Name: toxic, dtype: float64"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["def tf_idf(data, max_features = None, ngram_range = (1, 1)):\n","\n","  t_vectorizer = TfidfVectorizer(max_features = max_features, ngram_range = ngram_range)\n","  X = t_vectorizer.fit_transform(data)\n","  terms = t_vectorizer.get_feature_names_out()\n","  return pd.DataFrame(X.toarray(), columns = terms)"],"metadata":{"id":"9oeh36rtjPFe","executionInfo":{"status":"ok","timestamp":1671049789690,"user_tz":480,"elapsed":360,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# Vectorize using TF-IDF\n","unigrams = tf_idf(df['comment_cleaned'], max_features = 300, ngram_range = (1, 1))\n","print(f'Shape unigrams: {unigrams.shape}')\n","bigrams = tf_idf(df['comment_cleaned'], max_features = 300, ngram_range = (2, 2))\n","print(f'Shape bigrams: {bigrams.shape}')\n","trigrams = tf_idf(df['comment_cleaned'], max_features = 300, ngram_range = (3, 3))\n","print(f'Shape trigrams: {trigrams.shape}')"],"metadata":{"id":"lK47O0uSkbBG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671049849742,"user_tz":480,"elapsed":58835,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"e7fab0f1-5e81-4d50-b490-fbcd7c406336"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Shape unigrams: (159548, 300)\n","Shape bigrams: (159548, 300)\n","Shape trigrams: (159548, 300)\n"]}]},{"cell_type":"code","source":["unigrams_final = pd.concat([unigrams, df], axis = 1)\n","bigrams_final = pd.concat([bigrams, df], axis = 1)\n","trigrams_final = pd.concat([trigrams, df], axis = 1)"],"metadata":{"id":"hdzjdddGiKo-","executionInfo":{"status":"ok","timestamp":1671049853071,"user_tz":480,"elapsed":3349,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["df_list = [('TF-IDF (unigrams)', unigrams_final), \n","           ('TF-IDF (bigrams)', bigrams_final), \n","           ('TF-IDF (trigrams)', trigrams_final)]\n","\n","model_list = [('Logistic Regression', LogisticRegression(max_iter = 200)),\n","              ('Random Forest', RandomForestClassifier())]\n","\n","results_list = []\n","\n","def scoring(y, y_pred):\n","  precision = precision_score(y, y_pred)\n","  recall = recall_score(y, y_pred)\n","  f1 = f1_score(y, y_pred)\n","  return precision, recall, f1\n","\n","for df_label, data in df_list:\n","  for model_label, model in model_list:\n","    print(f'Processing: {df_label}, {model_label}')\n","    drop_cols = ['comment_cleaned', 'train_test']\n","    train = data[data['train_test'] == 'train'].drop(columns = drop_cols)\n","    test = data[data['train_test'] == 'test'].drop(columns = drop_cols)\n","\n","    M = model\n","    M.fit(train.drop(columns = 'toxic'), train.loc[:, 'toxic'])\n","    y_proba = M.predict_proba(test.drop(columns = 'toxic'))[:, 1]\n","    for cutoff in [0.05, 0.10, 0.15]:\n","      y_pred = np.where(y_proba >= cutoff, 1, 0)\n","      y = test.loc[:, 'toxic']\n","      precision, recall, f1 = scoring(y, y_pred)\n","      results_list.append([df_label, model_label, cutoff, precision, recall, f1])\n","\n","results = pd.DataFrame(\n","            results_list,\n","            columns = ['features', 'model', 'cutoff', 'precision', 'recall', 'f1']\n","            )\n","\n","results.set_index(['features', 'model', 'cutoff'], inplace = True)"],"metadata":{"id":"6GCP5zesmODN","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671038138505,"user_tz":480,"elapsed":333357,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"fdbc7033-0072-417d-acfe-0d5738838d91"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Processing: TF-IDF (unigrams), Logistic Regression\n","Processing: TF-IDF (unigrams), Random Forest\n","Processing: TF-IDF (bigrams), Logistic Regression\n","Processing: TF-IDF (bigrams), Random Forest\n","Processing: TF-IDF (trigrams), Logistic Regression\n","Processing: TF-IDF (trigrams), Random Forest\n"]}]},{"cell_type":"code","source":["results.round(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":645},"id":"Dy5pjknENDRl","executionInfo":{"status":"ok","timestamp":1671038287687,"user_tz":480,"elapsed":326,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"f704d5bc-6bfc-4bf7-f59b-be90bd6bfef6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              precision  recall     f1\n","features          model               cutoff                          \n","TF-IDF (unigrams) Logistic Regression 0.05        0.220   0.896  0.353\n","                                      0.10        0.320   0.783  0.454\n","                                      0.15        0.423   0.660  0.515\n","                  Random Forest       0.05        0.216   0.854  0.345\n","                                      0.10        0.326   0.744  0.454\n","                                      0.15        0.412   0.666  0.509\n","TF-IDF (bigrams)  Logistic Regression 0.05        0.125   0.930  0.220\n","                                      0.10        0.131   0.731  0.222\n","                                      0.15        0.412   0.244  0.307\n","                  Random Forest       0.05        0.143   0.746  0.240\n","                                      0.10        0.162   0.635  0.258\n","                                      0.15        0.217   0.395  0.280\n","TF-IDF (trigrams) Logistic Regression 0.05        0.105   0.988  0.190\n","                                      0.10        0.170   0.310  0.219\n","                                      0.15        0.390   0.155  0.222\n","                  Random Forest       0.05        0.122   0.773  0.210\n","                                      0.10        0.137   0.601  0.223\n","                                      0.15        0.212   0.298  0.248"],"text/html":["\n","  <div id=\"df-3df94b9e-fd85-434f-88e2-7a4ad813181d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","    <tr>\n","      <th>features</th>\n","      <th>model</th>\n","      <th>cutoff</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">TF-IDF (unigrams)</th>\n","      <th rowspan=\"3\" valign=\"top\">Logistic Regression</th>\n","      <th>0.05</th>\n","      <td>0.220</td>\n","      <td>0.896</td>\n","      <td>0.353</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.320</td>\n","      <td>0.783</td>\n","      <td>0.454</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.423</td>\n","      <td>0.660</td>\n","      <td>0.515</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Random Forest</th>\n","      <th>0.05</th>\n","      <td>0.216</td>\n","      <td>0.854</td>\n","      <td>0.345</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.326</td>\n","      <td>0.744</td>\n","      <td>0.454</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.412</td>\n","      <td>0.666</td>\n","      <td>0.509</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">TF-IDF (bigrams)</th>\n","      <th rowspan=\"3\" valign=\"top\">Logistic Regression</th>\n","      <th>0.05</th>\n","      <td>0.125</td>\n","      <td>0.930</td>\n","      <td>0.220</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.131</td>\n","      <td>0.731</td>\n","      <td>0.222</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.412</td>\n","      <td>0.244</td>\n","      <td>0.307</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Random Forest</th>\n","      <th>0.05</th>\n","      <td>0.143</td>\n","      <td>0.746</td>\n","      <td>0.240</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.162</td>\n","      <td>0.635</td>\n","      <td>0.258</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.217</td>\n","      <td>0.395</td>\n","      <td>0.280</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"6\" valign=\"top\">TF-IDF (trigrams)</th>\n","      <th rowspan=\"3\" valign=\"top\">Logistic Regression</th>\n","      <th>0.05</th>\n","      <td>0.105</td>\n","      <td>0.988</td>\n","      <td>0.190</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.170</td>\n","      <td>0.310</td>\n","      <td>0.219</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.390</td>\n","      <td>0.155</td>\n","      <td>0.222</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">Random Forest</th>\n","      <th>0.05</th>\n","      <td>0.122</td>\n","      <td>0.773</td>\n","      <td>0.210</td>\n","    </tr>\n","    <tr>\n","      <th>0.10</th>\n","      <td>0.137</td>\n","      <td>0.601</td>\n","      <td>0.223</td>\n","    </tr>\n","    <tr>\n","      <th>0.15</th>\n","      <td>0.212</td>\n","      <td>0.298</td>\n","      <td>0.248</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3df94b9e-fd85-434f-88e2-7a4ad813181d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3df94b9e-fd85-434f-88e2-7a4ad813181d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3df94b9e-fd85-434f-88e2-7a4ad813181d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["# Max Precision\n","results[results.precision == results.precision.max()].round(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"2XhZ9UpzdMkx","executionInfo":{"status":"ok","timestamp":1671038298537,"user_tz":480,"elapsed":305,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"9c5ba0d4-b905-4b08-bb37-b007008f8810"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              precision  recall     f1\n","features          model               cutoff                          \n","TF-IDF (unigrams) Logistic Regression 0.15        0.423    0.66  0.515"],"text/html":["\n","  <div id=\"df-a14b2b33-0e0e-473e-b25f-043100bd31c1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","    <tr>\n","      <th>features</th>\n","      <th>model</th>\n","      <th>cutoff</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>TF-IDF (unigrams)</th>\n","      <th>Logistic Regression</th>\n","      <th>0.15</th>\n","      <td>0.423</td>\n","      <td>0.66</td>\n","      <td>0.515</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a14b2b33-0e0e-473e-b25f-043100bd31c1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a14b2b33-0e0e-473e-b25f-043100bd31c1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a14b2b33-0e0e-473e-b25f-043100bd31c1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# Max Recall\n","results[results.recall == results.recall.max()].round(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"eHNq9FDDdBwb","executionInfo":{"status":"ok","timestamp":1671038304364,"user_tz":480,"elapsed":313,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"e8a05a42-a327-4ca1-d646-9544fe863124"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              precision  recall    f1\n","features          model               cutoff                         \n","TF-IDF (trigrams) Logistic Regression 0.05        0.105   0.988  0.19"],"text/html":["\n","  <div id=\"df-e860a181-8a16-40fb-a87e-619292757201\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","    <tr>\n","      <th>features</th>\n","      <th>model</th>\n","      <th>cutoff</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>TF-IDF (trigrams)</th>\n","      <th>Logistic Regression</th>\n","      <th>0.05</th>\n","      <td>0.105</td>\n","      <td>0.988</td>\n","      <td>0.19</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e860a181-8a16-40fb-a87e-619292757201')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e860a181-8a16-40fb-a87e-619292757201 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e860a181-8a16-40fb-a87e-619292757201');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Max F1-Score\n","results[results.f1 == results.f1.max()].round(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"GoLZRePYSCZQ","executionInfo":{"status":"ok","timestamp":1671038312584,"user_tz":480,"elapsed":313,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"ae4971ff-1419-4f43-d191-66ec09afe2cd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                              precision  recall     f1\n","features          model               cutoff                          \n","TF-IDF (unigrams) Logistic Regression 0.15        0.423    0.66  0.515"],"text/html":["\n","  <div id=\"df-674ba438-e4c5-4d6f-b7c1-56f828ce2db0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>precision</th>\n","      <th>recall</th>\n","      <th>f1</th>\n","    </tr>\n","    <tr>\n","      <th>features</th>\n","      <th>model</th>\n","      <th>cutoff</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>TF-IDF (unigrams)</th>\n","      <th>Logistic Regression</th>\n","      <th>0.15</th>\n","      <td>0.423</td>\n","      <td>0.66</td>\n","      <td>0.515</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-674ba438-e4c5-4d6f-b7c1-56f828ce2db0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-674ba438-e4c5-4d6f-b7c1-56f828ce2db0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-674ba438-e4c5-4d6f-b7c1-56f828ce2db0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["best_model = LogisticRegression(max_iter = 200)\n","\n","drop_cols = ['comment_cleaned', 'train_test']\n","train = unigrams_final[unigrams_final['train_test'] == 'train'].drop(columns = drop_cols)\n","test = unigrams_final[unigrams_final['train_test'] == 'test'].drop(columns = drop_cols)\n","\n","best_model.fit(train.drop(columns = 'toxic'), train.loc[:, 'toxic'])\n","y_proba = best_model.predict_proba(test.drop(columns = 'toxic'))[:, 1]\n","y = test.loc[:, 'toxic']\n","print(f'AUC = {roc_auc_score(y, y_proba):.3f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AMpBtFPRV3zD","executionInfo":{"status":"ok","timestamp":1671038500053,"user_tz":480,"elapsed":5019,"user":{"displayName":"Scott Wais","userId":"03533980004669446212"}},"outputId":"0c0f2a7f-7281-42a1-84f2-44b21b9a11b4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["AUC = 0.891\n"]}]}]}